##Garcia Torres Omar 20201567 
##Sitemas programables
##2.5 Embeded Web Server PicoW (prender / apagar BLINK Led Interno via WEB

import network
import socket
from time import sleep
from picozero import pico_temp_sensor, pico_led
import machine

ssid = 'OmarGT2001'
password = 'Omar1234'

def connect():
    # Conectar a WLAN
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(ssid, password)
    while wlan.isconnected() == False:
        print('Esperando conexión...')
        sleep(1)        
    ip = wlan.ifconfig()[0]
    print(f'Conectado en {ip}')
    return ip

def open_socket(ip):
    # Abrir un socket
    address = (ip, 80)
    connection = socket.socket()
    connection.bind(address)
    connection.listen(1)
    return connection

def pagina_web(temperatura, estado):
    # Plantilla HTML
    html = f"""
            <!DOCTYPE html>
            <html>
            <head>
                <title>GARCIA TORRES OMAR. SISTEMAS PROGRAMABLES. 2.5 Embedded Web Server PicoW</title>
            </head>
            <body>
                <h1>GARCIA TORRES OMAR. SISTEMAS PROGRAMABLES. 2.5 Embedded Web Server PicoW</h1>
                <form action="./lighton">
                    <input type="submit" value="Encender LED" />
                </form>
                <form action="./lightoff">
                    <input type="submit" value="Apagar LED" />
                </form>
                <p>Estado del LED: {estado}</p>
                <p>Temperatura: {temperatura} °C</p>
            </body>
            </html>
            """
    return str(html)

def servir(connection):
    # Iniciar un servidor web
    estado = 'APAGADO'
    pico_led.off()
    while True:
        client = connection.accept()[0]
        request = client.recv(1024)
        request = str(request)
        try:
            request = request.split()[1]
        except IndexError:
            pass
        if request == '/lighton?':
            pico_led.on()
            estado = 'ENCENDIDO'
        elif request =='/lightoff?':
            pico_led.off()
            estado = 'APAGADO'
        temperatura = pico_temp_sensor.temp
        html = pagina_web(temperatura, estado)
        client.send(html)
        client.close()

try:
    ip = connect()
    connection = open_socket(ip)
    servir(connection)
except KeyboardInterrupt:
    machine.reset()

    
